<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Correll</title>
    <link>http://localhost:1313/life-repository/programming/</link>
    <description>Recent content in Programming on Correll</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/life-repository/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>This Website</title>
      <link>http://localhost:1313/life-repository/programming/thiswebsite/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/life-repository/programming/thiswebsite/</guid>
      <description>&lt;p&gt;This website is built with &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, using the &lt;a href=&#34;https://github.com/panr/hugo-theme-terminal/&#34;&gt;Terminal&lt;/a&gt; theme.&lt;/p&gt;
&lt;p&gt;Hugo takes &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt; files and turns them into static web pages. It was written in Go and it’s a great way to develop a great personal website that has simple navigation, tagging features, and easy to use themes.&lt;/p&gt;
&lt;p&gt;For my site I went with the Terminal theme. I also decided to use the yaml format for the syntax files. For that, I renamed the default hugo.toml file to hugo.yaml and &lt;a href=&#34;https://he3.app/en/blogs/yaml-to-toml-a-comprehensive-guide-for-developers/&#34;&gt;changed the syntax to the yaml format&lt;/a&gt;.&lt;/p&gt;</description>
      <content>&lt;p&gt;This website is built with &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, using the &lt;a href=&#34;https://github.com/panr/hugo-theme-terminal/&#34;&gt;Terminal&lt;/a&gt; theme.&lt;/p&gt;
&lt;p&gt;Hugo takes &lt;a href=&#34;https://www.markdownguide.org/&#34;&gt;Markdown&lt;/a&gt; files and turns them into static web pages. It was written in Go and it’s a great way to develop a great personal website that has simple navigation, tagging features, and easy to use themes.&lt;/p&gt;
&lt;p&gt;For my site I went with the Terminal theme. I also decided to use the yaml format for the syntax files. For that, I renamed the default hugo.toml file to hugo.yaml and &lt;a href=&#34;https://he3.app/en/blogs/yaml-to-toml-a-comprehensive-guide-for-developers/&#34;&gt;changed the syntax to the yaml format&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;usual-setup-for-a-project-looks-something-like-this&#34;&gt;Usual setup for a project looks something like this:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo new site quickstart &amp;amp;&amp;amp; cd quickstart&lt;/p&gt;
&lt;p&gt;git init&lt;/p&gt;
&lt;p&gt;git submodule add &lt;a href=&#34;https://github.com/theNewDynamic/gohugo-theme-ananke.git&#34;&gt;https://github.com/theNewDynamic/gohugo-theme-ananke.git&lt;/a&gt; themes/ananke&lt;/p&gt;
&lt;p&gt;echo &amp;ldquo;theme = &amp;lsquo;ananke&amp;rsquo;&amp;rdquo; &amp;raquo; hugo.yaml&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I ran into some issues using this method when it came to deploying the site to GitHub. Therefore I ended up copying the files from the theme folder into the base directory.
&lt;img src=&#34;../../filesystem.png#img.center&#34; alt=&#34;Files&#34;&gt;&lt;br&gt;
This works, however if you want to change the theme at some point it becomes more difficult than just changing it in the hugo.yaml file.&lt;/p&gt;
&lt;p&gt;I also implemented a simple menu system for the website&amp;rsquo;s navigation:
&lt;img src=&#34;../../menucode.png#img.center&#34; alt=&#34;MenuCode&#34;&gt;&lt;/p&gt;
&lt;p&gt;I applied the following code to the hugo.yaml file:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;centerTheme = &amp;ldquo;true&amp;rdquo;&lt;br&gt;
And finally I added a taxonomy called &amp;ldquo;places to be able to organize posts by location/state. This is also done inside the hugo.yaml file:&lt;br&gt;
&lt;img src=&#34;../../taxonomies.png#img.center&#34; alt=&#34;Taxonomies&#34;&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Finally, to run the website locally on your machine you can run the following code:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo server &amp;ndash;buildDrafts&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I use the option &amp;ndash;buildDrafts to build all blog posts no matter what the status of the draft property is in the file. You can set the draft property to true so your post isn&amp;rsquo;t live until you change the value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;draft: true&lt;/p&gt;&lt;/blockquote&gt;
</content>
    </item>
    
  </channel>
</rss>
